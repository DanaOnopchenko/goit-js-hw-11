{"mappings":"AAIA,MAAMA,EAAO,CACTC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,cAC7BE,MAAOH,SAASC,cAAc,cAOlC,IAAIG,EAAO,EAEX,IAAIC,EAAY,EAQhB,MAAMC,EAAW,IAAIC,sBAiCrB,SAAgBC,EAASC,GACrBD,EAAQE,SAAQC,IACRA,EAAMC,iBACNC,QAAQC,IAAI,aACZV,GAAQ,EACRW,EAAUX,GAAMY,MAAKC,IACjBnB,EAAKC,QAAQmB,mBAAmB,YAAaC,EAAYF,EAAKG,OAC9Df,EAAYgB,KAAKC,KAAKL,EAAKM,UAjD3B,KAkDInB,IAASC,GAC7BI,EAASe,UAAU1B,EAAKK,MAAM,I,IAK1BU,QAAQC,IAAIN,E,GArDF,CACZiB,KAAM,KACNC,WAAY,QACZC,UAAW,IAKb,SAASZ,EAAUa,EAAK,GAInB,OAAOC,MAAM,8EAAyCD,0EAAmBZ,MAAKc,IAC3E,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAEd,OAAOF,EAAKG,KAAK,GAAG,G,CAU5B,SAASd,EAAYe,GACjB,OAAOA,EAAIC,KAAI,EAACC,aAAEA,EAAYC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAAgB,6CAEtEL,WAAsBC,6DAEfC,2BACAC,8BACGC,gCACEC,gCAEXC,KAAK,G,CAhBlB3B,IAAYC,MAAKC,IACbnB,EAAKC,QAAQmB,mBAAmB,YAAaC,EAAYF,EAAKG,OAC9Dd,EAASqC,QAAQ7C,EAAKK,MAAM,IAC7ByC,OAAMC,GAAKhC,QAAQC,IAAI+B","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\n\n\n\nconst refs = {\n    gallery: document.querySelector('.gallery'),\n    load: document.querySelector('.load-more'),\n    quard: document.querySelector('.js-guard')\n}\n// refs.load.addEventListener('click', onLoadMore)\n\n\n\n\nlet page = 1;\nconst perPage = 100;\nlet totalPage = 0;\n\nlet options = {\n  root: null,\n  rootMargin: '150px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(onLoad, options);\n\nfunction photosApi(page=1) { \n    const API_KEY = '31885081-e3ce08364707c8044635d8ba7'\n    const BASE_URL = 'https://pixabay.com/api/'\n    const filters = `per_page=100&image_type=photo&orientation=horizontal&safesearch=true`\n     return fetch(`${BASE_URL}?key=${API_KEY}&q=cat&page=${page}&${filters}`).then(resp => { \n        if (!resp.ok){ \n            throw new Error()\n        }\n        return resp.json('')\n    })\n}\n\nphotosApi().then(data => { \n    refs.gallery.insertAdjacentHTML('beforeend', creatMarkup(data.hits))\n    observer.observe(refs.quard)\n}).catch(err=>console.log(err))\n\n\nfunction creatMarkup(arr) { \n    return arr.map(({ webformatURL, tags, likes, views, comments, downloads }) => `\n    <div class=\"photo-card\">\n<img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n<div class=\"info\">\n<p><b>Likes: </b>${likes}</p>\n<p><b>Views: </b>${views}</p>\n<p><b>Comments: </b>${comments}</p>\n <p><b>Downloads: </b>${downloads}</p>\n  </div>\n    </div>`).join('')\n}\n\nfunction onLoad(entries, observer) { \n    entries.forEach(entry => {\n        if (entry.isIntersecting) { \n            console.log('I see you');\n            page += 1;\n            photosApi(page).then(data => { \n                refs.gallery.insertAdjacentHTML('beforeend', creatMarkup(data.hits));\n                totalPage = Math.ceil(data.totalHits/perPage);\n                if (page === totalPage) { \nobserver.unobserve(refs.quard)\n                }  \n            })\n        }\n    });\n    console.log(entries)\n}\n// function photosApi(page=1) { \n//     const API_KEY = '31885081-e3ce08364707c8044635d8ba7'\n//     const BASE_URL = 'https://pixabay.com/api/'\n//     const filters = `per_page=100&image_type=photo&orientation=horizontal&safesearch=true`\n//      return fetch(`${BASE_URL}?key=${API_KEY}&q=cat&page=${page}&${filters}`).then(resp => { \n//         if (!resp.ok){ \n//             throw new Error()\n//         }\n//         return resp.json('')\n//     })\n// }\n\n// photosApi().then(data => { \n// refs.gallery.insertAdjacentHTML('beforeend',creatMarkup(data.hits))\n// }).catch(err=>console.log(err))\n\n// function creatMarkup(arr) { \n//     return arr.map(({ webformatURL, tags, likes, views, comments, downloads }) => `\n//     <div class=\"photo-card\">\n// <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n// <div class=\"info\">\n// <p><b>Likes: </b>${likes}</p>\n// <p><b>Views: </b>${views}</p>\n// <p><b>Comments: </b>${comments}</p>\n//  <p><b>Downloads: </b>${downloads}</p>\n//   </div>\n//     </div>`).join('')\n// }\n\n// function onLoadMore() { \n//     page += 1;\n// photosApi(page).then(data => { \n//     refs.gallery.insertAdjacentHTML('beforeend', creatMarkup(data.hits));\n//     totalPage = Math.ceil(data.totalHits/perPage);\n//     if (page === totalPage) {\n// refs.load.setAttribute('hidden',true)\n//      }\n// }).catch(err=>console.log(err))\n// }"],"names":["$1f0dc3b9307be026$var$refs","gallery","document","querySelector","load","quard","$1f0dc3b9307be026$var$page","$1f0dc3b9307be026$var$totalPage","$1f0dc3b9307be026$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","console","log","$1f0dc3b9307be026$var$photosApi","then","data","insertAdjacentHTML","$1f0dc3b9307be026$var$creatMarkup","hits","Math","ceil","totalHits","unobserve","root","rootMargin","threshold","page1","fetch","resp","ok","Error","json","arr","map","webformatURL","tags","likes","views","comments","downloads","join","observe","catch","err"],"version":3,"file":"index.9b2d93e9.js.map"}